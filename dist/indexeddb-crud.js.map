{"version":3,"sources":["../src/indexeddb-crud.js"],"names":["IndexedDBHandler","_db","_defaultStoreName","_presentKey","open","config","openSuccessCallback","openFailCallback","window","indexedDB","alert","_openHandler","successCallback","openRequest","name","version","onblocked","blockedSchemeUp","onupgradeneeded","schemaUp","e","target","result","console","log","_createObjectStoreHandler","storeConfig","onsuccess","openSuccess","onversionchange","versionchangeHandler","close","_openSuccessCallbackHandler","onerror","openError","error","Error","configStoreConfig","objectStoreList","_parseJSONData","forEach","index","storeName","length","_getPresentKey","transaction","_getAllRequest","getAllSuccess","cursor","value","id","continue","oncomplete","completeGetPresentKey","objectStoreNames","contains","_createObjectStore","store","createObjectStore","keyPath","key","autoIncrement","addinitialData","initialData","_initialDataHandler","objectStore","data","addRequest","add","addInitialSuccess","addAllDataDone","rawdata","parsedData","JSON","parse","stringify","getLength","getNewKey","addItem","newData","addSuccess","source","getItem","getRequest","get","parseInt","getSuccess","getWhetherConditionItem","condition","whether","push","completeAddAll","getAll","completeGetAll","removeItem","deleteRequest","delete","deleteSuccess","removeWhetherConditionItem","completeRemoveWhether","clear","completeClear","updateItem","putRequest","put","putSuccess","openCursor","IDBKeyRange","lowerBound"],"mappings":"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","file":"indexeddb-crud.js","sourcesContent":["const IndexedDBHandler = (() => {\n  let _db;\n  let _defaultStoreName;\n  const _presentKey = {}; // store multi-objectStore's presentKey\n\n  function open(config, openSuccessCallback, openFailCallback) {\n    // init open indexedDB\n    if (!window.indexedDB) { // firstly inspect browser's support for indexedDB\n      if (openFailCallback) {\n        openFailCallback(); // PUNCHLINE: offer without-DB handler\n      } else {\n        window.alert('\\u2714 Your browser doesn\\'t support a stable version of IndexedDB. You can install latest Chrome or FireFox to handler it');\n      }\n\n      return 0;\n    }\n    _openHandler(config, openSuccessCallback);\n\n    return 0;\n  }\n\n  function _openHandler(config, successCallback) {\n    const openRequest = window.indexedDB.open(config.name, config.version); // open indexedDB\n\n    // an onblocked event is fired until they are closed or reloaded\n    openRequest.onblocked = function blockedSchemeUp() {\n      // If some other tab is loaded with the database, then it needs to be closed before we can proceed.\n      window.alert('Please close all other tabs with this site open');\n    };\n\n    // Creating or updating the version of the database\n    openRequest.onupgradeneeded = function schemaUp(e) {\n      // All other databases have been closed. Set everything up.\n      _db = e.target.result;\n      console.log('\\u2713 onupgradeneeded in');\n      _createObjectStoreHandler(config.storeConfig);\n    };\n\n    openRequest.onsuccess = function openSuccess(e) {\n      _db = e.target.result;\n      _db.onversionchange = function versionchangeHandler() {\n        _db.close();\n        window.alert('A new version of this page is ready. Please reload');\n      };\n      _openSuccessCallbackHandler(config.storeConfig, successCallback);\n    };\n\n    // use error events bubble to handle all error events\n    openRequest.onerror = function openError(e) {\n      window.alert('Something is wrong with indexedDB, for more information, checkout console');\n      console.log(e.target.error);\n      throw new Error(e.target.error);\n    };\n  }\n\n  function _openSuccessCallbackHandler(configStoreConfig, successCallback) {\n    const objectStoreList = _parseJSONData(configStoreConfig, 'storeName');\n\n    objectStoreList.forEach((storeConfig, index) => {\n      if (index === 0) {\n        _defaultStoreName = storeConfig.storeName; // PUNCHLINE: the last storeName is defaultStoreName\n      }\n      if (index === (objectStoreList.length - 1)) {\n        _getPresentKey(storeConfig.storeName, () => {\n          successCallback();\n          console.log('\\u2713 open indexedDB success');\n        });\n      } else {\n        _getPresentKey(storeConfig.storeName);\n      }\n    });\n  }\n\n  // set present key value to _presentKey (the private property)\n  function _getPresentKey(storeName, successCallback) {\n    const transaction = _db.transaction([storeName]);\n\n    _presentKey[storeName] = 0;\n    _getAllRequest(transaction, storeName).onsuccess = function getAllSuccess(e) {\n      const cursor = e.target.result;\n\n      if (cursor) {\n        _presentKey[storeName] = cursor.value.id;\n        cursor.continue();\n      }\n    };\n    transaction.oncomplete = function completeGetPresentKey() {\n      console.log(`\\u2713 now ${storeName} 's max key is ${_presentKey[storeName]}`); // initial value is 0\n      if (successCallback) {\n        successCallback();\n        console.log('\\u2713 openSuccessCallback finished');\n      }\n    };\n  }\n\n  function _createObjectStoreHandler(configStoreConfig) {\n    _parseJSONData(configStoreConfig, 'storeName').forEach((storeConfig) => {\n      if (!(_db.objectStoreNames.contains(storeConfig.storeName))) {\n        _createObjectStore(storeConfig);\n      }\n    });\n  }\n\n  function _createObjectStore(storeConfig) {\n    const store = _db.createObjectStore(storeConfig.storeName, { keyPath: storeConfig.key, autoIncrement: true });\n\n    // Use transaction oncomplete to make sure the object Store creation is finished\n    store.transaction.oncomplete = function addinitialData() {\n      console.log(`\\u2713 create ${storeConfig.storeName} 's object store succeed`);\n      if (storeConfig.initialData) {\n        // Store initial values in the newly created object store.\n        _initialDataHandler(storeConfig.storeName, storeConfig.initialData);\n      }\n    };\n  }\n\n  function _initialDataHandler(storeName, initialData) {\n    const transaction = _db.transaction([storeName], 'readwrite');\n    const objectStore = transaction.objectStore(storeName);\n\n    _parseJSONData(initialData, 'initial').forEach((data, index) => {\n      const addRequest = objectStore.add(data);\n\n      addRequest.onsuccess = function addInitialSuccess() {\n        console.log(`\\u2713 add initial data[${index}] successed`);\n      };\n    });\n    transaction.oncomplete = function addAllDataDone() {\n      console.log(`\\u2713 add all ${storeName} 's initial data done :)`);\n      _getPresentKey(storeName);\n    };\n  }\n\n  function _parseJSONData(rawdata, name) {\n    try {\n      const parsedData = JSON.parse(JSON.stringify(rawdata));\n\n      return parsedData;\n    } catch (error) {\n      window.alert(`please set correct ${name} array object :)`);\n      console.log(error);\n      throw error;\n    }\n  }\n\n  function getLength(storeName = _defaultStoreName) {\n    return _presentKey[storeName];\n  }\n\n  function getNewKey(storeName = _defaultStoreName) {\n    _presentKey[storeName] += 1;\n\n    return _presentKey[storeName];\n  }\n\n  /* CRUD */\n\n  function addItem(newData, successCallback, storeName = _defaultStoreName) {\n    const transaction = _db.transaction([storeName], 'readwrite');\n    const addRequest = transaction.objectStore(storeName).add(newData);\n\n    addRequest.onsuccess = function addSuccess() {\n      console.log(`\\u2713 add ${storeName}'s ${addRequest.source.keyPath}  = ${newData[addRequest.source.keyPath]} data succeed :)`);\n      if (successCallback) {\n        successCallback(newData);\n      }\n    };\n  }\n\n  function getItem(key, successCallback, storeName = _defaultStoreName) {\n    const transaction = _db.transaction([storeName]);\n    const getRequest = transaction.objectStore(storeName).get(parseInt(key, 10)); // get it by index\n\n    getRequest.onsuccess = function getSuccess() {\n      console.log(`\\u2713 get ${storeName}'s ${getRequest.source.keyPath} = ${key} data success :)`);\n      if (successCallback) {\n        successCallback(getRequest.result);\n      }\n    };\n  }\n\n  // get conditional data (boolean condition)\n  function getWhetherConditionItem(condition, whether, successCallback, storeName = _defaultStoreName) {\n    const transaction = _db.transaction([storeName]);\n    const result = []; // use an array to storage eligible data\n\n    _getAllRequest(transaction, storeName).onsuccess = function getAllSuccess(e) {\n      const cursor = e.target.result;\n\n      if (cursor) {\n        if (cursor.value[condition] === whether) {\n          result.push(cursor.value);\n        }\n        cursor.continue();\n      }\n    };\n    transaction.oncomplete = function completeAddAll() {\n      console.log(`\\u2713 get ${storeName}'s ${condition} = ${whether} data success :)`);\n      if (successCallback) {\n        successCallback(result);\n      }\n    };\n  }\n\n  function getAll(successCallback, storeName = _defaultStoreName) {\n    const transaction = _db.transaction([storeName]);\n    const result = [];\n\n    _getAllRequest(transaction, storeName).onsuccess = function getAllSuccess(e) {\n      const cursor = e.target.result;\n\n      if (cursor) {\n        result.push(cursor.value);\n        cursor.continue();\n      }\n    };\n    transaction.oncomplete = function completeGetAll() {\n      console.log(`\\u2713 get ${storeName}'s all data success :)`);\n      if (successCallback) {\n        successCallback(result);\n      }\n    };\n  }\n\n  function removeItem(key, successCallback, storeName = _defaultStoreName) {\n    const transaction = _db.transaction([storeName], 'readwrite');\n    const deleteRequest = transaction.objectStore(storeName).delete(key);\n\n    deleteRequest.onsuccess = function deleteSuccess() {\n      console.log(`\\u2713 remove ${storeName}'s  ${deleteRequest.source.keyPath} = ${key} data success :)`);\n      if (successCallback) {\n        successCallback(key);\n      }\n    };\n  }\n\n  function removeWhetherConditionItem(condition, whether, successCallback, storeName = _defaultStoreName) {\n    const transaction = _db.transaction([storeName], 'readwrite');\n\n    _getAllRequest(transaction, storeName).onsuccess = function getAllSuccess(e) {\n      const cursor = e.target.result;\n\n      if (cursor) {\n        if (cursor.value[condition] === whether) {\n          cursor.delete();\n        }\n        cursor.continue();\n      }\n    };\n    transaction.oncomplete = function completeRemoveWhether() {\n      console.log(`\\u2713 remove ${storeName}'s ${condition} = ${whether} data success :)`);\n      if (successCallback) {\n        successCallback();\n      }\n    };\n  }\n\n  function clear(successCallback, storeName = _defaultStoreName) {\n    const transaction = _db.transaction([storeName], 'readwrite');\n\n    _getAllRequest(transaction, storeName).onsuccess = function getAllSuccess(e) {\n      const cursor = e.target.result;\n\n      if (cursor) {\n        cursor.delete();\n        cursor.continue();\n      }\n    };\n    transaction.oncomplete = function completeClear() {\n      console.log(`\\u2713 clear ${storeName}'s all data success :)`);\n      if (successCallback) {\n        successCallback('clear all data success');\n      }\n    };\n  }\n\n  // update one\n  function updateItem(newData, successCallback, storeName = _defaultStoreName) {\n    const transaction = _db.transaction([storeName], 'readwrite');\n    const putRequest = transaction.objectStore(storeName).put(newData);\n\n    putRequest.onsuccess = function putSuccess() {\n      console.log(`\\u2713 update ${storeName}'s ${putRequest.source.keyPath}  = ${newData[putRequest.source.keyPath]} data success :)`);\n      if (successCallback) {\n        successCallback(newData);\n      }\n    };\n  }\n\n  function _getAllRequest(transaction, storeName) {\n    return transaction.objectStore(storeName).openCursor(IDBKeyRange.lowerBound(1), 'next');\n  }\n\n  return {\n    open,\n    getLength,\n    getNewKey,\n    getItem,\n    getWhetherConditionItem,\n    getAll,\n    addItem,\n    removeItem,\n    removeWhetherConditionItem,\n    clear,\n    updateItem,\n  };\n})();\n\nexport default IndexedDBHandler;\n"]}